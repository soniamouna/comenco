{"ast":null,"code":"var _jsxFileName = \"/Users/fouedtouzi/Documents/github.nosync/comenco/trydo/src/elements/counters/CounterOne.jsx\";\nimport React, { Component, Fragment } from \"react\";\nimport CountUp from 'react-countup';\nimport VisibilitySensor from 'react-visibility-sensor';\n\nclass CounterOne extends Component {\n  constructor(props) {\n    super(props);\n\n    this.onVisibilityChange = isVisible => {\n      if (isVisible) {\n        this.setState({\n          didViewCountUp: true\n        });\n      }\n    };\n\n    this.state = {\n      didViewCountUp: false\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 17\n      }\n    }, this.props.DataCounter.map((value, index) => /*#__PURE__*/React.createElement(\"div\", {\n      className: `${value.countStyle}`,\n      key: index,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"h5\", {\n      className: \"counter\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 29\n      }\n    }, value.countSymbole, /*#__PURE__*/React.createElement(VisibilitySensor, {\n      onChange: this.onVisibilityChange,\n      offset: {\n        top: 10\n      },\n      delayedCall: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 31\n      }\n    }, /*#__PURE__*/React.createElement(CountUp, {\n      end: this.state.didViewCountUp ? value.countNum : 0,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 35\n      }\n    }))), /*#__PURE__*/React.createElement(\"p\", {\n      className: \"description\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 29\n      }\n    }, value.countTitle)))));\n  }\n\n}\n\nexport default CounterOne;","map":{"version":3,"sources":["/Users/fouedtouzi/Documents/github.nosync/comenco/trydo/src/elements/counters/CounterOne.jsx"],"names":["React","Component","Fragment","CountUp","VisibilitySensor","CounterOne","constructor","props","onVisibilityChange","isVisible","setState","didViewCountUp","state","render","DataCounter","map","value","index","countStyle","countSymbole","top","countNum","countTitle"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA4BC,QAA5B,QAA4C,OAA5C;AACA,OAAOC,OAAP,MAAoB,eAApB;AACA,OAAOC,gBAAP,MAA6B,yBAA7B;;AAEA,MAAMC,UAAN,SAAyBJ,SAAzB,CAAkC;AAChCK,EAAAA,WAAW,CAACC,KAAD,EAAO;AAChB,UAAOA,KAAP;;AADgB,SAKhBC,kBALgB,GAKKC,SAAS,IAAI;AAC9B,UAAIA,SAAJ,EAAe;AACX,aAAKC,QAAL,CAAc;AAACC,UAAAA,cAAc,EAAE;AAAjB,SAAd;AACH;AACJ,KATe;;AAEhB,SAAKC,KAAL,GAAa;AACTD,MAAAA,cAAc,EAAE;AADP,KAAb;AAEG;;AAOHE,EAAAA,MAAM,GAAE;AAEJ,wBACI,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACK,KAAKN,KAAL,CAAWO,WAAX,CAAuBC,GAAvB,CAA4B,CAACC,KAAD,EAAQC,KAAR,kBACzB;AAAK,MAAA,SAAS,EAAI,GAAED,KAAK,CAACE,UAAW,EAArC;AAAwC,MAAA,GAAG,EAAED,KAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAI,MAAA,SAAS,EAAC,SAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGD,KAAK,CAACG,YADT,eAEE,oBAAC,gBAAD;AAAkB,MAAA,QAAQ,EAAE,KAAKX,kBAAjC;AAAqD,MAAA,MAAM,EAAE;AAACY,QAAAA,GAAG,EAAC;AAAL,OAA7D;AAAuE,MAAA,WAAW,MAAlF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,OAAD;AAAS,MAAA,GAAG,EAAE,KAAKR,KAAL,CAAWD,cAAX,GAA4BK,KAAK,CAACK,QAAlC,GAA6C,CAA3D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CAFF,CADJ,eAOI;AAAG,MAAA,SAAS,EAAC,aAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA4BL,KAAK,CAACM,UAAlC,CAPJ,CADH,CADL,CADJ,CADJ;AAiBH;;AA/B6B;;AAiClC,eAAejB,UAAf","sourcesContent":["import React, { Component , Fragment } from \"react\";\nimport CountUp from 'react-countup';\nimport VisibilitySensor from 'react-visibility-sensor';\n\nclass CounterOne extends Component{\n  constructor(props){\n    super (props);\n    this.state = {\n        didViewCountUp: false\n    };}\n    onVisibilityChange = isVisible => {\n        if (isVisible) {\n            this.setState({didViewCountUp: true});\n        }\n    }\n\n    render(){\n\n        return(\n            <Fragment>\n                <div className=\"row\">\n                    {this.props.DataCounter.map( (value, index) => (\n                        <div className= {`${value.countStyle}`} key={index}>\n                            <h5 className=\"counter\">\n                              {value.countSymbole}\n                              <VisibilitySensor onChange={this.onVisibilityChange} offset={{top:10}} delayedCall>\n                                  <CountUp end={this.state.didViewCountUp ? value.countNum : 0} />\n                              </VisibilitySensor>\n                            </h5>\n                            <p className=\"description\">{value.countTitle}</p>\n                        </div>\n                    ))}\n                </div>\n            </Fragment>\n        )\n    }\n}\nexport default CounterOne;\n"]},"metadata":{},"sourceType":"module"}